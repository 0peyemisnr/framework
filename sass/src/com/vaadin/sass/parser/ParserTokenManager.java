/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package com.vaadin.sass.parser;
import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Map;
import org.w3c.css.sac.ConditionFactory;
import org.w3c.css.sac.Condition;
import org.w3c.css.sac.SelectorFactory;
import org.w3c.css.sac.SelectorList;
import org.w3c.css.sac.Selector;
import org.w3c.css.sac.SimpleSelector;
import org.w3c.css.sac.DocumentHandler;
import org.w3c.css.sac.InputSource;
import org.w3c.css.sac.ErrorHandler;
import org.w3c.css.sac.CSSException;
import org.w3c.css.sac.CSSParseException;
import org.w3c.css.sac.Locator;
import org.w3c.css.sac.LexicalUnit;
import org.w3c.flute.parser.selectors.SelectorFactoryImpl;
import org.w3c.flute.parser.selectors.ConditionFactoryImpl;
import org.w3c.flute.util.Encoding;
import com.vaadin.sass.handler.*;
import com.vaadin.sass.tree.*;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x380000000000L) != 0L)
         {
            jjmatchedKind = 62;
            return 375;
         }
         if ((active0 & 0x204000L) != 0L)
            return 134;
         if ((active0 & 0x40000000L) != 0L)
            return 376;
         if ((active0 & 0x2000220L) != 0L)
            return 3;
         if ((active0 & 0xfffc00000000000L) != 0L || (active1 & 0x3e00000L) != 0L)
            return 72;
         if ((active0 & 0x4L) != 0L)
            return 377;
         return -1;
      case 1:
         if ((active0 & 0x400000000000000L) != 0L)
            return 73;
         if ((active0 & 0xbffc00000000000L) != 0L || (active1 & 0x3e00000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 1;
            return 378;
         }
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 1;
            return 375;
         }
         if ((active0 & 0x200L) != 0L)
            return 1;
         if ((active0 & 0x280000000000L) != 0L)
            return 375;
         return -1;
      case 2:
         if ((active0 & 0x80000000000000L) != 0L)
            return 378;
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 2;
            return 375;
         }
         if ((active0 & 0xf7fc00000000000L) != 0L || (active1 & 0x3e00000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 2;
            return 378;
         }
         return -1;
      case 3:
         if ((active0 & 0x10000000000000L) != 0L)
            return 378;
         if ((active0 & 0xf6fc00000000000L) != 0L || (active1 & 0x3e00000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 3;
            return 378;
         }
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 3;
            return 375;
         }
         return -1;
      case 4:
         if ((active0 & 0xe47c00000000000L) != 0L || (active1 & 0x2e00000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 4;
            return 378;
         }
         if ((active0 & 0x128000000000000L) != 0L || (active1 & 0x1000000L) != 0L)
            return 378;
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 4;
            return 375;
         }
         return -1;
      case 5:
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 5;
            return 375;
         }
         if ((active0 & 0x44400000000000L) != 0L || (active1 & 0x400000L) != 0L)
            return 378;
         if ((active0 & 0xe03800000000000L) != 0L || (active1 & 0x2a00000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 5;
            return 378;
         }
         return -1;
      case 6:
         if ((active0 & 0x202000000000000L) != 0L || (active1 & 0x200000L) != 0L)
            return 378;
         if ((active0 & 0xc01800000000000L) != 0L || (active1 & 0x2800000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 6;
            return 378;
         }
         if ((active0 & 0x100000000000L) != 0L)
            return 375;
         return -1;
      case 7:
         if ((active0 & 0xc01000000000000L) != 0L || (active1 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 7;
            return 378;
         }
         if ((active0 & 0x800000000000L) != 0L || (active1 & 0x800000L) != 0L)
            return 378;
         return -1;
      case 8:
         if ((active0 & 0x801000000000000L) != 0L)
            return 378;
         if ((active0 & 0x400000000000000L) != 0L || (active1 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 8;
            return 378;
         }
         return -1;
      case 9:
         if ((active1 & 0x2000000L) != 0L)
            return 378;
         if ((active0 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 9;
            return 378;
         }
         return -1;
      case 10:
         if ((active0 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 10;
            return 378;
         }
         return -1;
      case 11:
         if ((active0 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 11;
            return 378;
         }
         return -1;
      case 12:
         if ((active0 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 90;
            jjmatchedPos = 12;
            return 378;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa1_0(0x4L, 0x0L);
      case 38:
         return jjStopAtPos(0, 29);
      case 40:
         return jjStopAtPos(0, 31);
      case 41:
         return jjStopAtPos(0, 32);
      case 42:
         return jjStopAtPos(0, 28);
      case 43:
         return jjStopAtPos(0, 20);
      case 44:
         return jjStopAtPos(0, 22);
      case 45:
         jjmatchedKind = 21;
         return jjMoveStringLiteralDfa1_0(0x4000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 30, 376);
      case 47:
         jjmatchedKind = 25;
         return jjMoveStringLiteralDfa1_0(0x220L, 0x0L);
      case 58:
         return jjStopAtPos(0, 33);
      case 59:
         return jjStopAtPos(0, 23);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x2000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 19);
      case 62:
         return jjStopAtPos(0, 24);
      case 64:
         return jjMoveStringLiteralDfa1_0(0xfffc00000000000L, 0x3e00000L);
      case 91:
         return jjStopAtPos(0, 26);
      case 93:
         return jjStopAtPos(0, 27);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x180000000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 15);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x20000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 16);
      case 126:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      default :
         return jjMoveNfa_0(4, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000L, active1, 0L);
      case 42:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(1, 9, 1);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000004000L, active1, 0L);
      case 47:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(1, 5);
         break;
      case 61:
         if ((active0 & 0x20000L) != 0L)
            return jjStopAtPos(1, 17);
         else if ((active0 & 0x40000L) != 0L)
            return jjStopAtPos(1, 18);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x320000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x11000000000000L, active1, 0x2000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x80800000000000L, active1, 0x200000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000L, active1, 0x400000L);
      case 78:
      case 110:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 45, 375);
         break;
      case 79:
      case 111:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 43, 375);
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000000L, active1, 0L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x48000000000000L, active1, 0L);
      case 123:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000L, active1, 0L);
      case 62:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(2, 14);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x28000000000000L, active1, 0x1000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x6000000000000L, active1, 0x400000L);
      case 70:
      case 102:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 55, 378);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000000000L, active1, 0x800000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0x200000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0x2000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x801000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(3, 13);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000L, active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x20800000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000L, active1, 0x2000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x400100000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0x200000L);
      case 82:
      case 114:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 52, 378);
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x202000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 56, 378);
         else if ((active1 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(4, 88, 378);
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0L);
      case 72:
      case 104:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 53, 378);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000L, active1, 0x400000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x40800000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 51, 378);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x200000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x800000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x6100000000000L, active1, 0L);
      case 90:
      case 122:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000000000L, active1, 0x2000000L);
      case 65:
      case 97:
         if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(5, 86, 378);
         break;
      case 69:
      case 101:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 54, 378);
         break;
      case 71:
      case 103:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 50, 378);
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 46, 378);
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L, active1, 0x200000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x800000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 378);
         return jjMoveStringLiteralDfa7_0(active0, 0x400800000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x800000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x2000000L);
      case 72:
      case 104:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 44, 375);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x1000000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 49, 378);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(6, 85, 378);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x2000000L);
      case 69:
      case 101:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 47, 378);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0x401000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(7, 87, 378);
         return jjMoveStringLiteralDfa8_0(active0, 0x800000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x400000000000000L, active1, 0x2000000L);
      case 78:
      case 110:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 48, 378);
         break;
      case 83:
      case 115:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 59, 378);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(9, 89, 378);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa10_0(active0, 0x400000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 77:
      case 109:
         return jjMoveStringLiteralDfa11_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa12_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         return jjMoveStringLiteralDfa13_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(13, 58, 378);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 375;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 4);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(186, 189);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(183, 185);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(181, 182);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 180);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(173, 177);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(169, 172);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(165, 168);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(162, 164);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(159, 161);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(156, 158);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(153, 155);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(150, 152);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(147, 149);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(144, 146);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(141, 143);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(139, 140);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 63)
                        kind = 63;
                     jjCheckNAdd(138);
                  }
                  break;
               case 377:
               case 61:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 72:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 63)
                        kind = 63;
                     jjCheckNAddStates(5, 78);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(79, 96);
                  else if (curChar == 45)
                     jjAddStates(97, 98);
                  else if (curChar == 33)
                     jjCheckNAddStates(99, 102);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(61, 62);
                  else if (curChar == 36)
                     jjCheckNAddStates(103, 106);
                  else if (curChar == 39)
                     jjCheckNAddStates(107, 110);
                  else if (curChar == 34)
                     jjCheckNAddStates(111, 114);
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 378:
               case 74:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 375:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  else if (curChar == 40)
                  {
                     if (kind > 102)
                        kind = 102;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 62)
                        kind = 62;
                     jjCheckNAddTwoStates(93, 94);
                  }
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 1:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0xffff7fffffffffffL & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 3:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 5:
                  if (curChar == 34)
                     jjCheckNAddStates(111, 114);
                  break;
               case 6:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 7:
                  if (curChar == 34 && kind > 61)
                     kind = 61;
                  break;
               case 9:
                  if (curChar == 12)
                     jjCheckNAddStates(111, 114);
                  break;
               case 11:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(118, 123);
                  break;
               case 13:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(124, 132);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(133, 137);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(138, 143);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(144, 150);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(151, 158);
                  break;
               case 19:
                  if (curChar == 13)
                     jjCheckNAddStates(111, 114);
                  break;
               case 20:
                  if (curChar == 10)
                     jjCheckNAddStates(111, 114);
                  break;
               case 21:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 39)
                     jjCheckNAddStates(107, 110);
                  break;
               case 23:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(107, 110);
                  break;
               case 24:
                  if (curChar == 39 && kind > 61)
                     kind = 61;
                  break;
               case 26:
                  if (curChar == 12)
                     jjCheckNAddStates(107, 110);
                  break;
               case 28:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(107, 110);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(159, 164);
                  break;
               case 30:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(107, 110);
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(165, 173);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(174, 178);
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(179, 184);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(185, 191);
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(192, 199);
                  break;
               case 36:
                  if (curChar == 13)
                     jjCheckNAddStates(107, 110);
                  break;
               case 37:
                  if (curChar == 10)
                     jjCheckNAddStates(107, 110);
                  break;
               case 38:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 36)
                     jjCheckNAddStates(103, 106);
                  break;
               case 40:
                  if (curChar == 45)
                     jjCheckNAdd(41);
                  break;
               case 42:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 44:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(200, 203);
                  break;
               case 46:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(204, 210);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(211, 213);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(214, 217);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(218, 222);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(223, 228);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(229, 232);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(233, 239);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(240, 242);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(243, 246);
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(247, 251);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(252, 257);
                  break;
               case 60:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(61, 62);
                  break;
               case 63:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(258, 261);
                  break;
               case 65:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(262, 268);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(269, 271);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(272, 275);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(276, 280);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(281, 286);
                  break;
               case 76:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(287, 290);
                  break;
               case 78:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(291, 297);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(298, 300);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(301, 304);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(305, 309);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(310, 315);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(316, 319);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(320, 326);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(327, 329);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(330, 333);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(334, 338);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(339, 344);
                  break;
               case 93:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(93, 94);
                  break;
               case 95:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(93, 94);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(345, 348);
                  break;
               case 97:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(93, 94);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(349, 355);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(356, 358);
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(359, 362);
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(363, 367);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(368, 373);
                  break;
               case 103:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 104:
                  if (curChar == 40 && kind > 102)
                     kind = 102;
                  break;
               case 106:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(374, 378);
                  break;
               case 108:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(379, 386);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(387, 390);
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(391, 395);
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(396, 401);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(402, 408);
                  break;
               case 114:
                  if (curChar == 33)
                     jjCheckNAddStates(99, 102);
                  break;
               case 115:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(115, 122);
                  break;
               case 123:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(123, 132);
                  break;
               case 133:
                  if (curChar == 45)
                     jjAddStates(97, 98);
                  break;
               case 137:
                  if (curChar == 46)
                     jjCheckNAddStates(79, 96);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAdd(138);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(139, 140);
                  break;
               case 140:
                  if (curChar == 37 && kind > 67)
                     kind = 67;
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(141, 143);
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(144, 146);
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(147, 149);
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(150, 152);
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(153, 155);
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(156, 158);
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(159, 161);
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(162, 164);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(165, 168);
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(169, 172);
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(173, 177);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 180);
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(181, 182);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(183, 185);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(186, 189);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 4);
                  break;
               case 191:
                  if (curChar == 45)
                     jjCheckNAdd(192);
                  break;
               case 193:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddTwoStates(193, 194);
                  break;
               case 195:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddTwoStates(193, 194);
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(409, 412);
                  break;
               case 197:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddTwoStates(193, 194);
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(413, 419);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(420, 422);
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(423, 426);
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(427, 431);
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(432, 437);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(438, 441);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(442, 448);
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(449, 451);
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(452, 455);
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(456, 460);
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(461, 466);
                  break;
               case 212:
                  if (curChar == 40)
                     jjCheckNAddStates(467, 472);
                  break;
               case 213:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(473, 476);
                  break;
               case 214:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(214, 215);
                  break;
               case 215:
                  if (curChar == 41 && kind > 65)
                     kind = 65;
                  break;
               case 217:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(473, 476);
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(477, 481);
                  break;
               case 219:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(473, 476);
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(482, 489);
                  break;
               case 221:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(490, 493);
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(494, 498);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(499, 504);
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(505, 511);
                  break;
               case 225:
                  if (curChar == 39)
                     jjCheckNAddStates(512, 515);
                  break;
               case 226:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(512, 515);
                  break;
               case 227:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(214, 215);
                  break;
               case 229:
                  if (curChar == 12)
                     jjCheckNAddStates(512, 515);
                  break;
               case 231:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(512, 515);
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(516, 521);
                  break;
               case 233:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(512, 515);
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(522, 530);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(531, 535);
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(536, 541);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(542, 548);
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(549, 556);
                  break;
               case 239:
                  if (curChar == 13)
                     jjCheckNAddStates(512, 515);
                  break;
               case 240:
                  if (curChar == 10)
                     jjCheckNAddStates(512, 515);
                  break;
               case 241:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if (curChar == 34)
                     jjCheckNAddStates(557, 560);
                  break;
               case 243:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 244:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(214, 215);
                  break;
               case 246:
                  if (curChar == 12)
                     jjCheckNAddStates(557, 560);
                  break;
               case 248:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(561, 566);
                  break;
               case 250:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(567, 575);
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(576, 580);
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(581, 586);
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(587, 593);
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(594, 601);
                  break;
               case 256:
                  if (curChar == 13)
                     jjCheckNAddStates(557, 560);
                  break;
               case 257:
                  if (curChar == 10)
                     jjCheckNAddStates(557, 560);
                  break;
               case 258:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(602, 608);
                  break;
               case 262:
                  if (curChar == 43)
                     jjAddStates(609, 610);
                  break;
               case 263:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 264:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(611, 614);
                  break;
               case 265:
                  if (curChar == 63 && kind > 101)
                     kind = 101;
                  break;
               case 266:
               case 281:
               case 285:
               case 288:
               case 291:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAdd(265);
                  break;
               case 267:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddTwoStates(265, 266);
                  break;
               case 268:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(615, 617);
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjAddStates(618, 623);
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 271:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(273);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L && kind > 101)
                     kind = 101;
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAdd(265);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 284:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddTwoStates(265, 285);
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 287:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(624, 626);
                  break;
               case 289:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddTwoStates(265, 288);
                  break;
               case 290:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(627, 630);
                  break;
               case 292:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddTwoStates(265, 291);
                  break;
               case 293:
                  if (curChar != 63)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(631, 633);
                  break;
               case 294:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 302);
                  break;
               case 296:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(634, 637);
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAdd(273);
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddTwoStates(273, 299);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(638, 640);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(641, 645);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(296);
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(303, 296);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(646, 648);
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(649, 652);
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(653, 656);
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(657, 663);
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(664, 666);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(667, 670);
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(671, 675);
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(676, 681);
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(682, 686);
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(687, 694);
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(695, 698);
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(699, 703);
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(704, 709);
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(710, 716);
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(5, 78);
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAdd(321);
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(322, 323);
                  break;
               case 323:
                  if (curChar == 46)
                     jjCheckNAdd(138);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(324, 140);
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(325, 326);
                  break;
               case 326:
                  if (curChar == 46)
                     jjCheckNAdd(139);
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(327, 143);
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(328, 329);
                  break;
               case 329:
                  if (curChar == 46)
                     jjCheckNAdd(141);
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(330, 146);
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(331, 332);
                  break;
               case 332:
                  if (curChar == 46)
                     jjCheckNAdd(144);
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(333, 149);
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(334, 335);
                  break;
               case 335:
                  if (curChar == 46)
                     jjCheckNAdd(147);
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(336, 152);
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(337, 338);
                  break;
               case 338:
                  if (curChar == 46)
                     jjCheckNAdd(150);
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(339, 155);
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(340, 341);
                  break;
               case 341:
                  if (curChar == 46)
                     jjCheckNAdd(153);
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(342, 158);
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(343, 344);
                  break;
               case 344:
                  if (curChar == 46)
                     jjCheckNAdd(156);
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(345, 161);
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(346, 347);
                  break;
               case 347:
                  if (curChar == 46)
                     jjCheckNAdd(159);
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(348, 164);
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(349, 350);
                  break;
               case 350:
                  if (curChar == 46)
                     jjCheckNAdd(162);
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(351, 168);
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(352, 353);
                  break;
               case 353:
                  if (curChar == 46)
                     jjCheckNAdd(165);
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(354, 172);
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(355, 356);
                  break;
               case 356:
                  if (curChar == 46)
                     jjCheckNAdd(169);
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(357, 177);
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(358, 359);
                  break;
               case 359:
                  if (curChar == 46)
                     jjCheckNAdd(173);
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(360, 180);
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(361, 362);
                  break;
               case 362:
                  if (curChar == 46)
                     jjCheckNAdd(178);
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(363, 182);
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(364, 365);
                  break;
               case 365:
                  if (curChar == 46)
                     jjCheckNAdd(181);
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(366, 185);
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(367, 368);
                  break;
               case 368:
                  if (curChar == 46)
                     jjCheckNAdd(183);
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(369, 189);
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(370, 371);
                  break;
               case 371:
                  if (curChar == 46)
                     jjCheckNAdd(186);
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(717, 721);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(373, 374);
                  break;
               case 374:
                  if (curChar == 46)
                     jjCheckNAdd(190);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 377:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 84)
                        kind = 84;
                     jjCheckNAddTwoStates(61, 62);
                  }
                  else if (curChar == 92)
                     jjAddStates(722, 723);
                  break;
               case 134:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 62)
                        kind = 62;
                     jjCheckNAddTwoStates(93, 94);
                  }
                  break;
               case 72:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 90)
                        kind = 90;
                     jjCheckNAddTwoStates(74, 75);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(76, 86);
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 62)
                        kind = 62;
                     jjCheckNAddStates(724, 728);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(729, 732);
                  else if (curChar == 64)
                     jjAddStates(733, 736);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(737, 739);
                  break;
               case 378:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 90)
                        kind = 90;
                     jjCheckNAddTwoStates(74, 75);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(76, 77);
                  break;
               case 375:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(95, 96);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 62)
                        kind = 62;
                     jjCheckNAddTwoStates(93, 94);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(106, 107);
                  break;
               case 2:
                  if (kind > 8)
                     kind = 8;
                  break;
               case 6:
               case 11:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 8:
                  if (curChar == 92)
                     jjAddStates(740, 743);
                  break;
               case 10:
                  if (curChar == 92)
                     jjAddStates(744, 745);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(118, 123);
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(124, 132);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(133, 137);
                  break;
               case 16:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(138, 143);
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(144, 150);
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(151, 158);
                  break;
               case 23:
               case 28:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(107, 110);
                  break;
               case 25:
                  if (curChar == 92)
                     jjAddStates(746, 749);
                  break;
               case 27:
                  if (curChar == 92)
                     jjAddStates(750, 751);
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(159, 164);
                  break;
               case 31:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(165, 173);
                  break;
               case 32:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(174, 178);
                  break;
               case 33:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(179, 184);
                  break;
               case 34:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(185, 191);
                  break;
               case 35:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(192, 199);
                  break;
               case 41:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 42:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 43:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(44, 45);
                  break;
               case 44:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 45:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(200, 203);
                  break;
               case 47:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(204, 210);
                  break;
               case 48:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(211, 213);
                  break;
               case 49:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(214, 217);
                  break;
               case 50:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(218, 222);
                  break;
               case 51:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(223, 228);
                  break;
               case 53:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(44, 54);
                  break;
               case 54:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(229, 232);
                  break;
               case 55:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(233, 239);
                  break;
               case 56:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(240, 242);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(243, 246);
                  break;
               case 58:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(247, 251);
                  break;
               case 59:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddStates(252, 257);
                  break;
               case 61:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 62:
                  if (curChar == 92)
                     jjAddStates(722, 723);
                  break;
               case 63:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 64:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(258, 261);
                  break;
               case 66:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(262, 268);
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(269, 271);
                  break;
               case 68:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(272, 275);
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(276, 280);
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddStates(281, 286);
                  break;
               case 71:
                  if (curChar == 64)
                     jjAddStates(733, 736);
                  break;
               case 73:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 74:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 75:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(76, 77);
                  break;
               case 76:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 77:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(287, 290);
                  break;
               case 79:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(291, 297);
                  break;
               case 80:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(298, 300);
                  break;
               case 81:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(301, 304);
                  break;
               case 82:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(305, 309);
                  break;
               case 83:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(310, 315);
                  break;
               case 85:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(76, 86);
                  break;
               case 86:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(316, 319);
                  break;
               case 87:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(320, 326);
                  break;
               case 88:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(327, 329);
                  break;
               case 89:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(330, 333);
                  break;
               case 90:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(334, 338);
                  break;
               case 91:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddStates(339, 344);
                  break;
               case 93:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(93, 94);
                  break;
               case 94:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(95, 96);
                  break;
               case 95:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(93, 94);
                  break;
               case 96:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(345, 348);
                  break;
               case 98:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(349, 355);
                  break;
               case 99:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(356, 358);
                  break;
               case 100:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(359, 362);
                  break;
               case 101:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(363, 367);
                  break;
               case 102:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(368, 373);
                  break;
               case 103:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 105:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(106, 107);
                  break;
               case 106:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 107:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(374, 378);
                  break;
               case 109:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(379, 386);
                  break;
               case 110:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(387, 390);
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(391, 395);
                  break;
               case 112:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(396, 401);
                  break;
               case 113:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(402, 408);
                  break;
               case 116:
                  if ((0x10000000100000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 117:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 124:
                  if ((0x10000000100000L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 125:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 135:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 136:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(724, 728);
                  break;
               case 142:
                  if ((0x10000000100000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 143:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 145:
                  if ((0x200000002000L & l) != 0L && kind > 69)
                     kind = 69;
                  break;
               case 146:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 148:
                  if ((0x200000002000L & l) != 0L && kind > 70)
                     kind = 70;
                  break;
               case 149:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
                  if ((0x800000008L & l) != 0L && kind > 71)
                     kind = 71;
                  break;
               case 152:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 154:
                  if ((0x400000004000L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 155:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 157:
                  if ((0x100000001000000L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 158:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 160:
                  if ((0x200000002000L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 161:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 163:
                  if ((0x100000001000000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 164:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 166:
                  if ((0x8000000080L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 167:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 170:
                  if ((0x1000000010L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 171:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 174:
                  if ((0x1000000010L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 175:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 179:
                  if ((0x8000000080000L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 180:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 182:
                  if ((0x8000000080000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 184:
                  if ((0x400000004000000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 185:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 187:
                  if ((0x400000004000000L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 188:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 192:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddTwoStates(193, 194);
                  break;
               case 193:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddTwoStates(193, 194);
                  break;
               case 194:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(195, 196);
                  break;
               case 195:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddTwoStates(193, 194);
                  break;
               case 196:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(409, 412);
                  break;
               case 198:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(413, 419);
                  break;
               case 199:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(420, 422);
                  break;
               case 200:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(423, 426);
                  break;
               case 201:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(427, 431);
                  break;
               case 202:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(432, 437);
                  break;
               case 204:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(195, 205);
                  break;
               case 205:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(438, 441);
                  break;
               case 206:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(442, 448);
                  break;
               case 207:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(449, 451);
                  break;
               case 208:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(452, 455);
                  break;
               case 209:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(456, 460);
                  break;
               case 210:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddStates(461, 466);
                  break;
               case 211:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(737, 739);
                  break;
               case 213:
               case 217:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(473, 476);
                  break;
               case 216:
                  if (curChar == 92)
                     jjAddStates(752, 753);
                  break;
               case 218:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(477, 481);
                  break;
               case 220:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(482, 489);
                  break;
               case 221:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(490, 493);
                  break;
               case 222:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(494, 498);
                  break;
               case 223:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(499, 504);
                  break;
               case 224:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(505, 511);
                  break;
               case 226:
               case 231:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(512, 515);
                  break;
               case 228:
                  if (curChar == 92)
                     jjAddStates(754, 757);
                  break;
               case 230:
                  if (curChar == 92)
                     jjAddStates(758, 759);
                  break;
               case 232:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(516, 521);
                  break;
               case 234:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(522, 530);
                  break;
               case 235:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(531, 535);
                  break;
               case 236:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(536, 541);
                  break;
               case 237:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(542, 548);
                  break;
               case 238:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(549, 556);
                  break;
               case 243:
               case 248:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 245:
                  if (curChar == 92)
                     jjAddStates(760, 763);
                  break;
               case 247:
                  if (curChar == 92)
                     jjAddStates(764, 765);
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(561, 566);
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(567, 575);
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(576, 580);
                  break;
               case 253:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(581, 586);
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(587, 593);
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(594, 601);
                  break;
               case 260:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 261:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 269:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjAddStates(618, 623);
                  break;
               case 270:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 271:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 272:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(273);
                  break;
               case 273:
                  if ((0x7e0000007eL & l) != 0L && kind > 101)
                     kind = 101;
                  break;
               case 274:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 276:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 278:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 280:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 283:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 295:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(296, 302);
                  break;
               case 297:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 298:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(634, 637);
                  break;
               case 299:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAdd(273);
                  break;
               case 300:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddTwoStates(273, 299);
                  break;
               case 301:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(638, 640);
                  break;
               case 302:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(641, 645);
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(296);
                  break;
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(303, 296);
                  break;
               case 305:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(646, 648);
                  break;
               case 306:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(649, 652);
                  break;
               case 307:
                  if (curChar == 92)
                     jjCheckNAddStates(729, 732);
                  break;
               case 308:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(653, 656);
                  break;
               case 309:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(657, 663);
                  break;
               case 310:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(664, 666);
                  break;
               case 311:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(667, 670);
                  break;
               case 312:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(671, 675);
                  break;
               case 313:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(676, 681);
                  break;
               case 314:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(682, 686);
                  break;
               case 315:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(687, 694);
                  break;
               case 316:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(695, 698);
                  break;
               case 317:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(699, 703);
                  break;
               case 318:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(704, 709);
                  break;
               case 319:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(710, 716);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 377:
               case 61:
               case 63:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 72:
               case 76:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAddStates(724, 728);
                  break;
               case 378:
               case 74:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 375:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 62)
                        kind = 62;
                     jjCheckNAddTwoStates(93, 94);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 2:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 6:
               case 11:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 23:
               case 28:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(107, 110);
                  break;
               case 42:
               case 44:
               case 52:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAddTwoStates(42, 43);
                  break;
               case 93:
               case 95:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(93, 94);
                  break;
               case 103:
               case 106:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 193:
               case 195:
               case 203:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAddTwoStates(193, 194);
                  break;
               case 213:
               case 217:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(473, 476);
                  break;
               case 226:
               case 231:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(512, 515);
                  break;
               case 243:
               case 248:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 375 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_4()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_4(0x800L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_4(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(1, 11);
         break;
      default :
         return 2;
   }
   return 2;
}
private int jjMoveStringLiteralDfa0_2()
{
   return jjMoveNfa_2(0, 0);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 6)
                        kind = 6;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if ((0x2400L & l) != 0L && kind > 7)
                     kind = 7;
                  break;
               case 2:
                  if (curChar == 10 && kind > 7)
                     kind = 7;
                  break;
               case 3:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 6;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 6)
                     kind = 6;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_3(0x400L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_3(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         break;
      default :
         return 2;
   }
   return 2;
}
private final int jjStopStringLiteralDfa_1(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 125:
         return jjStopAtPos(0, 4);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 3)
                     kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   190, 191, 192, 203, 204, 321, 322, 323, 324, 325, 326, 140, 327, 328, 329, 143, 
   330, 331, 332, 146, 333, 334, 335, 149, 336, 337, 338, 152, 339, 340, 341, 155, 
   342, 343, 344, 158, 345, 346, 347, 161, 348, 349, 350, 164, 351, 352, 353, 168, 
   354, 355, 356, 172, 357, 358, 359, 177, 360, 361, 362, 180, 363, 364, 365, 182, 
   366, 367, 368, 185, 369, 370, 371, 189, 372, 373, 374, 191, 192, 203, 204, 138, 
   139, 141, 144, 147, 150, 153, 156, 159, 162, 165, 169, 173, 178, 181, 183, 186, 
   190, 134, 135, 115, 122, 123, 132, 40, 41, 52, 53, 23, 24, 25, 27, 6, 
   7, 8, 10, 103, 104, 105, 6, 13, 7, 8, 10, 14, 6, 15, 13, 7, 
   8, 10, 16, 17, 18, 6, 13, 7, 8, 10, 6, 15, 13, 7, 8, 10, 
   6, 15, 13, 7, 8, 10, 16, 6, 15, 13, 7, 8, 10, 16, 17, 23, 
   30, 24, 25, 27, 31, 23, 32, 30, 24, 25, 27, 33, 34, 35, 23, 30, 
   24, 25, 27, 23, 32, 30, 24, 25, 27, 23, 32, 30, 24, 25, 27, 33, 
   23, 32, 30, 24, 25, 27, 33, 34, 42, 46, 43, 47, 42, 48, 46, 43, 
   49, 50, 51, 42, 46, 43, 42, 48, 46, 43, 42, 48, 46, 43, 49, 42, 
   48, 46, 43, 49, 50, 46, 42, 43, 55, 56, 46, 42, 43, 57, 58, 59, 
   46, 42, 43, 56, 46, 42, 43, 56, 46, 42, 43, 57, 56, 46, 42, 43, 
   57, 58, 61, 65, 62, 66, 61, 67, 65, 62, 68, 69, 70, 61, 65, 62, 
   61, 67, 65, 62, 61, 67, 65, 62, 68, 61, 67, 65, 62, 68, 69, 74, 
   78, 75, 79, 74, 80, 78, 75, 81, 82, 83, 74, 78, 75, 74, 80, 78, 
   75, 74, 80, 78, 75, 81, 74, 80, 78, 75, 81, 82, 78, 74, 75, 87, 
   88, 78, 74, 75, 89, 90, 91, 78, 74, 75, 88, 78, 74, 75, 88, 78, 
   74, 75, 89, 88, 78, 74, 75, 89, 90, 93, 97, 94, 98, 93, 99, 97, 
   94, 100, 101, 102, 93, 97, 94, 93, 99, 97, 94, 93, 99, 97, 94, 100, 
   93, 99, 97, 94, 100, 101, 103, 108, 104, 105, 109, 103, 110, 108, 104, 105, 
   111, 112, 113, 103, 108, 104, 105, 103, 110, 108, 104, 105, 103, 110, 108, 104, 
   105, 111, 103, 110, 108, 104, 105, 111, 112, 193, 197, 194, 198, 193, 199, 197, 
   194, 200, 201, 202, 193, 197, 194, 193, 199, 197, 194, 193, 199, 197, 194, 200, 
   193, 199, 197, 194, 200, 201, 197, 193, 194, 206, 207, 197, 193, 194, 208, 209, 
   210, 197, 193, 194, 207, 197, 193, 194, 207, 197, 193, 194, 208, 207, 197, 193, 
   194, 208, 209, 213, 225, 242, 215, 216, 259, 213, 214, 215, 216, 213, 215, 216, 
   219, 220, 213, 221, 215, 216, 219, 222, 223, 224, 213, 215, 216, 219, 213, 221, 
   215, 216, 219, 213, 221, 215, 216, 219, 222, 213, 221, 215, 216, 219, 222, 223, 
   226, 227, 228, 230, 226, 233, 227, 228, 230, 234, 226, 235, 233, 227, 228, 230, 
   236, 237, 238, 226, 233, 227, 228, 230, 226, 235, 233, 227, 228, 230, 226, 235, 
   233, 227, 228, 230, 236, 226, 235, 233, 227, 228, 230, 236, 237, 243, 244, 245, 
   247, 243, 250, 244, 245, 247, 251, 243, 252, 250, 244, 245, 247, 253, 254, 255, 
   243, 250, 244, 245, 247, 243, 252, 250, 244, 245, 247, 243, 252, 250, 244, 245, 
   247, 253, 243, 252, 250, 244, 245, 247, 253, 254, 213, 225, 242, 214, 215, 216, 
   259, 263, 269, 265, 266, 267, 268, 265, 266, 267, 270, 274, 278, 282, 286, 290, 
   265, 288, 289, 265, 291, 292, 293, 265, 291, 292, 273, 299, 300, 301, 273, 299, 
   300, 303, 296, 304, 305, 306, 303, 296, 304, 303, 296, 304, 305, 97, 93, 94, 
   309, 310, 97, 93, 94, 311, 312, 313, 97, 93, 94, 310, 97, 93, 94, 310, 
   97, 93, 94, 311, 310, 97, 93, 94, 311, 312, 108, 103, 104, 105, 315, 316, 
   108, 103, 104, 105, 317, 318, 319, 108, 103, 104, 105, 316, 108, 103, 104, 105, 
   316, 108, 103, 104, 105, 317, 316, 108, 103, 104, 105, 317, 318, 372, 191, 192, 
   203, 204, 63, 64, 93, 103, 104, 105, 94, 95, 308, 106, 314, 72, 73, 84, 
   85, 261, 262, 294, 9, 19, 21, 20, 11, 12, 26, 36, 38, 37, 28, 29, 
   217, 218, 229, 239, 241, 240, 231, 232, 246, 256, 258, 257, 248, 249, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
"\74\41\55\55", "\55\55\76", "\173", "\175", "\174\75", "\176\75", "\75", "\53", "\55", "\54", 
"\73", "\76", "\57", "\133", "\135", "\52", "\46", "\56", "\50", "\51", "\72", null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_INTERPOLATION",
   "IN_SINGLE_LINE_COMMENT",
   "IN_FORMAL_COMMENT",
   "IN_MULTI_LINE_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, -1, 0, 2, -1, 0, 3, 4, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffff807ffffe003L, 0xe00ffffffeL, 
};
static final long[] jjtoSkip = {
   0xc90L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x410L, 0x0L, 
};
static final long[] jjtoMore = {
   0x136cL, 0x0L, 
};
protected CharStream input_stream;
private final int[] jjrounds = new int[375];
private final int[] jjstateSet = new int[750];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public ParserTokenManager(CharStream stream){
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(CharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(CharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 375; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(CharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 5 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 103)
         {
            jjmatchedKind = 103;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 12)
         {
            jjmatchedKind = 12;
         }
         break;
       case 4:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_4();
         if (jjmatchedPos == 0 && jjmatchedKind > 12)
         {
            jjmatchedKind = 12;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 8 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                   input_stream.backup(1);
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
          image = Parser.SPACE;
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
