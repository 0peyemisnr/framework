/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package com.vaadin.sass.parser;
import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Map;
import org.w3c.css.sac.ConditionFactory;
import org.w3c.css.sac.Condition;
import org.w3c.css.sac.SelectorFactory;
import org.w3c.css.sac.SelectorList;
import org.w3c.css.sac.Selector;
import org.w3c.css.sac.SimpleSelector;
import org.w3c.css.sac.DocumentHandler;
import org.w3c.css.sac.InputSource;
import org.w3c.css.sac.ErrorHandler;
import org.w3c.css.sac.CSSException;
import org.w3c.css.sac.CSSParseException;
import org.w3c.css.sac.Locator;
import org.w3c.css.sac.LexicalUnit;
import org.w3c.flute.parser.selectors.SelectorFactoryImpl;
import org.w3c.flute.parser.selectors.ConditionFactoryImpl;
import org.w3c.flute.util.Encoding;
import com.vaadin.sass.handler.*;
import com.vaadin.sass.tree.*;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x8000000L) != 0L)
            return 399;
         if ((active0 & 0x40800L) != 0L)
            return 158;
         if ((active0 & 0x3fff00000000000L) != 0L || (active1 & 0xf80000L) != 0L)
            return 96;
         if ((active0 & 0xe0000000000L) != 0L)
         {
            jjmatchedKind = 60;
            return 400;
         }
         if ((active0 & 0x400044L) != 0L)
            return 3;
         return -1;
      case 1:
         if ((active0 & 0x100000000000000L) != 0L)
            return 97;
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 60;
            jjmatchedPos = 1;
            return 400;
         }
         if ((active0 & 0xa0000000000L) != 0L)
            return 400;
         if ((active0 & 0x40L) != 0L)
            return 1;
         if ((active0 & 0x2fff00000000000L) != 0L || (active1 & 0xf80000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 1;
            return 401;
         }
         return -1;
      case 2:
         if ((active0 & 0x20000000000000L) != 0L)
            return 401;
         if ((active0 & 0x3dff00000000000L) != 0L || (active1 & 0xf80000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 2;
            return 401;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 60;
            jjmatchedPos = 2;
            return 400;
         }
         return -1;
      case 3:
         if ((active0 & 0x4000000000000L) != 0L)
            return 401;
         if ((active0 & 0x3dbf00000000000L) != 0L || (active1 & 0xf80000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 3;
            return 401;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 60;
            jjmatchedPos = 3;
            return 400;
         }
         return -1;
      case 4:
         if ((active0 & 0x4a000000000000L) != 0L || (active1 & 0x400000L) != 0L)
            return 401;
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 60;
            jjmatchedPos = 4;
            return 400;
         }
         if ((active0 & 0x391f00000000000L) != 0L || (active1 & 0xb80000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 4;
            return 401;
         }
         return -1;
      case 5:
         if ((active0 & 0x11100000000000L) != 0L || (active1 & 0x100000L) != 0L)
            return 401;
         if ((active0 & 0x380e00000000000L) != 0L || (active1 & 0xa80000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 5;
            return 401;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 60;
            jjmatchedPos = 5;
            return 400;
         }
         return -1;
      case 6:
         if ((active0 & 0x80800000000000L) != 0L || (active1 & 0x80000L) != 0L)
            return 401;
         if ((active0 & 0x300600000000000L) != 0L || (active1 & 0xa00000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 6;
            return 401;
         }
         if ((active0 & 0x40000000000L) != 0L)
            return 400;
         return -1;
      case 7:
         if ((active0 & 0x200000000000L) != 0L || (active1 & 0x200000L) != 0L)
            return 401;
         if ((active0 & 0x300400000000000L) != 0L || (active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 7;
            return 401;
         }
         return -1;
      case 8:
         if ((active0 & 0x200400000000000L) != 0L)
            return 401;
         if ((active0 & 0x100000000000000L) != 0L || (active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 8;
            return 401;
         }
         return -1;
      case 9:
         if ((active1 & 0x800000L) != 0L)
            return 401;
         if ((active0 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 9;
            return 401;
         }
         return -1;
      case 10:
         if ((active0 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 10;
            return 401;
         }
         return -1;
      case 11:
         if ((active0 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 11;
            return 401;
         }
         return -1;
      case 12:
         if ((active0 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 88;
            jjmatchedPos = 12;
            return 401;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 38:
         return jjStopAtPos(0, 26);
      case 40:
         return jjStopAtPos(0, 28);
      case 41:
         return jjStopAtPos(0, 29);
      case 42:
         return jjStopAtPos(0, 25);
      case 43:
         return jjStopAtPos(0, 17);
      case 44:
         return jjStopAtPos(0, 19);
      case 45:
         jjmatchedKind = 18;
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 27, 399);
      case 47:
         jjmatchedKind = 22;
         return jjMoveStringLiteralDfa1_0(0x44L, 0x0L);
      case 58:
         return jjStopAtPos(0, 30);
      case 59:
         return jjStopAtPos(0, 20);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 61:
         return jjStopAtPos(0, 16);
      case 62:
         return jjStopAtPos(0, 21);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x3fff00000000000L, 0xf80000L);
      case 91:
         return jjStopAtPos(0, 23);
      case 93:
         return jjStopAtPos(0, 24);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x60000000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 12);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x4000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 13);
      case 126:
         return jjMoveStringLiteralDfa1_0(0x8000L, 0x0L);
      default :
         return jjMoveNfa_0(4, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L, active1, 0L);
      case 42:
         if ((active0 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(1, 6, 1);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000800L, active1, 0L);
      case 47:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 61:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(1, 14);
         else if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(1, 15);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0xc8000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x4400000000000L, active1, 0x800000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x20200000000000L, active1, 0x80000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0x100000L);
      case 78:
      case 110:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 43, 400);
         break;
      case 79:
      case 111:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 41, 400);
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L, active1, 0L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x12000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L, active1, 0L);
      case 62:
         if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(2, 11);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0xa000000000000L, active1, 0x400000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x1800000000000L, active1, 0x100000L);
      case 70:
      case 102:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 53, 401);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0x200000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000000L, active1, 0x80000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000L, active1, 0x800000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x200400000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(3, 10);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000L, active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x8200000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000L, active1, 0x800000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x100040000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0x80000L);
      case 82:
      case 114:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 50, 401);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x80800000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 54, 401);
         else if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(4, 86, 401);
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000000L, active1, 0L);
      case 72:
      case 104:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 51, 401);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000L, active1, 0x100000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x10200000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 49, 401);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x80000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x200000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x800000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x1840000000000L, active1, 0L);
      case 90:
      case 122:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000000L, active1, 0x800000L);
      case 65:
      case 97:
         if ((active1 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(5, 84, 401);
         break;
      case 69:
      case 101:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 52, 401);
         break;
      case 71:
      case 103:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 48, 401);
         return jjMoveStringLiteralDfa6_0(active0, 0x40000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 44, 401);
         return jjMoveStringLiteralDfa6_0(active0, 0x80000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000L, active1, 0x80000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x200000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 55, 401);
         return jjMoveStringLiteralDfa7_0(active0, 0x100200000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x200000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x800000L);
      case 72:
      case 104:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 42, 400);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x400000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 47, 401);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(6, 83, 401);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x800000L);
      case 69:
      case 101:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 45, 401);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0x100400000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(7, 85, 401);
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x100000000000000L, active1, 0x800000L);
      case 78:
      case 110:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 46, 401);
         break;
      case 83:
      case 115:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 57, 401);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(9, 87, 401);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa10_0(active0, 0x100000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 77:
      case 109:
         return jjMoveStringLiteralDfa11_0(active0, 0x100000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa12_0(active0, 0x100000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         return jjMoveStringLiteralDfa13_0(active0, 0x100000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(13, 56, 401);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 399;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 400:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 40)
                  {
                     if (kind > 100)
                        kind = 100;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 60)
                        kind = 60;
                     jjCheckNAddTwoStates(117, 118);
                  }
                  break;
               case 96:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 401:
               case 98:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(3, 7);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(210, 213);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(207, 209);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(205, 206);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(202, 204);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(197, 201);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(193, 196);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(189, 192);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(186, 188);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(183, 185);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(180, 182);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(177, 179);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(174, 176);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(171, 173);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(168, 170);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(165, 167);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(163, 164);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 61)
                        kind = 61;
                     jjCheckNAdd(162);
                  }
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 61)
                        kind = 61;
                     jjCheckNAddStates(8, 81);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(82, 99);
                  else if (curChar == 45)
                     jjAddStates(100, 101);
                  else if (curChar == 33)
                     jjCheckNAddStates(102, 105);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(85, 86);
                  else if (curChar == 36)
                     jjCheckNAddStates(106, 109);
                  else if (curChar == 39)
                     jjCheckNAddStates(110, 113);
                  else if (curChar == 34)
                     jjCheckNAddStates(114, 117);
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 1:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0xffff7fffffffffffL & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 6:
                  if (curChar == 36)
                     jjCheckNAddStates(118, 121);
                  break;
               case 7:
                  if (curChar == 45)
                     jjCheckNAdd(8);
                  break;
               case 9:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(122, 124);
                  break;
               case 12:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(122, 124);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(125, 129);
                  break;
               case 14:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(122, 124);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(130, 137);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(138, 141);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(142, 146);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(147, 152);
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(153, 159);
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(160, 164);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(165, 172);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(173, 176);
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(177, 181);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(182, 187);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(188, 194);
                  break;
               case 28:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 29:
                  if (curChar == 34)
                     jjCheckNAddStates(114, 117);
                  break;
               case 30:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(114, 117);
                  break;
               case 31:
                  if (curChar == 34 && kind > 59)
                     kind = 59;
                  break;
               case 33:
                  if (curChar == 12)
                     jjCheckNAddStates(114, 117);
                  break;
               case 35:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(114, 117);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(195, 200);
                  break;
               case 37:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(114, 117);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(201, 209);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(210, 214);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(215, 220);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(221, 227);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(228, 235);
                  break;
               case 43:
                  if (curChar == 13)
                     jjCheckNAddStates(114, 117);
                  break;
               case 44:
                  if (curChar == 10)
                     jjCheckNAddStates(114, 117);
                  break;
               case 45:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 39)
                     jjCheckNAddStates(110, 113);
                  break;
               case 47:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(110, 113);
                  break;
               case 48:
                  if (curChar == 39 && kind > 59)
                     kind = 59;
                  break;
               case 50:
                  if (curChar == 12)
                     jjCheckNAddStates(110, 113);
                  break;
               case 52:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(110, 113);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(236, 241);
                  break;
               case 54:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(110, 113);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(242, 250);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(251, 255);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(256, 261);
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(262, 268);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(269, 276);
                  break;
               case 60:
                  if (curChar == 13)
                     jjCheckNAddStates(110, 113);
                  break;
               case 61:
                  if (curChar == 10)
                     jjCheckNAddStates(110, 113);
                  break;
               case 62:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 36)
                     jjCheckNAddStates(106, 109);
                  break;
               case 64:
                  if (curChar == 45)
                     jjCheckNAdd(65);
                  break;
               case 66:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(66, 67);
                  break;
               case 68:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(66, 67);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(277, 280);
                  break;
               case 70:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(66, 67);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(281, 287);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(288, 290);
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(291, 294);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(295, 299);
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(300, 305);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(306, 309);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(310, 316);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(317, 319);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(320, 323);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(324, 328);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(329, 334);
                  break;
               case 84:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(85, 86);
                  break;
               case 85:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(85, 86);
                  break;
               case 87:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(85, 86);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(335, 338);
                  break;
               case 89:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(85, 86);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(339, 345);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(346, 348);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(349, 352);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(353, 357);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(358, 363);
                  break;
               case 100:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(364, 367);
                  break;
               case 102:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(368, 374);
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(375, 377);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(378, 381);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(382, 386);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(387, 392);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(393, 396);
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(397, 403);
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(404, 406);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(407, 410);
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(411, 415);
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(416, 421);
                  break;
               case 117:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddTwoStates(117, 118);
                  break;
               case 119:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddTwoStates(117, 118);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(422, 425);
                  break;
               case 121:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddTwoStates(117, 118);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(426, 432);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(433, 435);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(436, 439);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(440, 444);
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(445, 450);
                  break;
               case 127:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 128:
                  if (curChar == 40 && kind > 100)
                     kind = 100;
                  break;
               case 130:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(451, 455);
                  break;
               case 132:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(456, 463);
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(464, 467);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(468, 472);
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(473, 478);
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(479, 485);
                  break;
               case 138:
                  if (curChar == 33)
                     jjCheckNAddStates(102, 105);
                  break;
               case 139:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(139, 146);
                  break;
               case 147:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(147, 156);
                  break;
               case 157:
                  if (curChar == 45)
                     jjAddStates(100, 101);
                  break;
               case 161:
                  if (curChar == 46)
                     jjCheckNAddStates(82, 99);
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAdd(162);
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(163, 164);
                  break;
               case 164:
                  if (curChar == 37 && kind > 65)
                     kind = 65;
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(165, 167);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(168, 170);
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(171, 173);
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(174, 176);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(177, 179);
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(180, 182);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(183, 185);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(186, 188);
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(189, 192);
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(193, 196);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(197, 201);
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(202, 204);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(205, 206);
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(207, 209);
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(210, 213);
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(3, 7);
                  break;
               case 215:
                  if (curChar == 45)
                     jjCheckNAdd(216);
                  break;
               case 217:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 219:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(486, 489);
                  break;
               case 221:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(490, 496);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(497, 499);
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(500, 503);
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(504, 508);
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(509, 514);
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(515, 518);
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(519, 525);
                  break;
               case 231:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(526, 528);
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(529, 532);
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(533, 537);
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(538, 543);
                  break;
               case 236:
                  if (curChar == 40)
                     jjCheckNAddStates(544, 549);
                  break;
               case 237:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(550, 553);
                  break;
               case 238:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(238, 239);
                  break;
               case 239:
                  if (curChar == 41 && kind > 63)
                     kind = 63;
                  break;
               case 241:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(550, 553);
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(554, 558);
                  break;
               case 243:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(550, 553);
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(559, 566);
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(567, 570);
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(571, 575);
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(576, 581);
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(582, 588);
                  break;
               case 249:
                  if (curChar == 39)
                     jjCheckNAddStates(589, 592);
                  break;
               case 250:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(589, 592);
                  break;
               case 251:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(238, 239);
                  break;
               case 253:
                  if (curChar == 12)
                     jjCheckNAddStates(589, 592);
                  break;
               case 255:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(589, 592);
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(593, 598);
                  break;
               case 257:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(589, 592);
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(599, 607);
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(608, 612);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(613, 618);
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(619, 625);
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(626, 633);
                  break;
               case 263:
                  if (curChar == 13)
                     jjCheckNAddStates(589, 592);
                  break;
               case 264:
                  if (curChar == 10)
                     jjCheckNAddStates(589, 592);
                  break;
               case 265:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if (curChar == 34)
                     jjCheckNAddStates(634, 637);
                  break;
               case 267:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(634, 637);
                  break;
               case 268:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(238, 239);
                  break;
               case 270:
                  if (curChar == 12)
                     jjCheckNAddStates(634, 637);
                  break;
               case 272:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(634, 637);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(638, 643);
                  break;
               case 274:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(634, 637);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(644, 652);
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(653, 657);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(658, 663);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(664, 670);
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(671, 678);
                  break;
               case 280:
                  if (curChar == 13)
                     jjCheckNAddStates(634, 637);
                  break;
               case 281:
                  if (curChar == 10)
                     jjCheckNAddStates(634, 637);
                  break;
               case 282:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(679, 685);
                  break;
               case 286:
                  if (curChar == 43)
                     jjAddStates(686, 687);
                  break;
               case 287:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 288:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(688, 691);
                  break;
               case 289:
                  if (curChar == 63 && kind > 99)
                     kind = 99;
                  break;
               case 290:
               case 305:
               case 309:
               case 312:
               case 315:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(289);
                  break;
               case 291:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(289, 290);
                  break;
               case 292:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(692, 694);
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjAddStates(695, 700);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(297);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(289);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(289, 309);
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 311:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(701, 703);
                  break;
               case 313:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(289, 312);
                  break;
               case 314:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(704, 707);
                  break;
               case 316:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(289, 315);
                  break;
               case 317:
                  if (curChar != 63)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(708, 710);
                  break;
               case 318:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(320, 326);
                  break;
               case 320:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(711, 714);
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(297);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(297, 323);
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(715, 717);
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(718, 722);
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(320);
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(327, 320);
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(723, 725);
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(726, 729);
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(730, 733);
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(734, 740);
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(741, 743);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(744, 747);
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(748, 752);
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(753, 758);
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(759, 763);
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(764, 771);
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(772, 775);
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(776, 780);
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(781, 786);
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(787, 793);
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddStates(8, 81);
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAdd(345);
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(346, 347);
                  break;
               case 347:
                  if (curChar == 46)
                     jjCheckNAdd(162);
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(348, 164);
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(349, 350);
                  break;
               case 350:
                  if (curChar == 46)
                     jjCheckNAdd(163);
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(351, 167);
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(352, 353);
                  break;
               case 353:
                  if (curChar == 46)
                     jjCheckNAdd(165);
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(354, 170);
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(355, 356);
                  break;
               case 356:
                  if (curChar == 46)
                     jjCheckNAdd(168);
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(357, 173);
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(358, 359);
                  break;
               case 359:
                  if (curChar == 46)
                     jjCheckNAdd(171);
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(360, 176);
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(361, 362);
                  break;
               case 362:
                  if (curChar == 46)
                     jjCheckNAdd(174);
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(363, 179);
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(364, 365);
                  break;
               case 365:
                  if (curChar == 46)
                     jjCheckNAdd(177);
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(366, 182);
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(367, 368);
                  break;
               case 368:
                  if (curChar == 46)
                     jjCheckNAdd(180);
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(369, 185);
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(370, 371);
                  break;
               case 371:
                  if (curChar == 46)
                     jjCheckNAdd(183);
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(372, 188);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(373, 374);
                  break;
               case 374:
                  if (curChar == 46)
                     jjCheckNAdd(186);
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(375, 192);
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(376, 377);
                  break;
               case 377:
                  if (curChar == 46)
                     jjCheckNAdd(189);
                  break;
               case 378:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(378, 196);
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(379, 380);
                  break;
               case 380:
                  if (curChar == 46)
                     jjCheckNAdd(193);
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(381, 201);
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(382, 383);
                  break;
               case 383:
                  if (curChar == 46)
                     jjCheckNAdd(197);
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(384, 204);
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(385, 386);
                  break;
               case 386:
                  if (curChar == 46)
                     jjCheckNAdd(202);
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(387, 206);
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(388, 389);
                  break;
               case 389:
                  if (curChar == 46)
                     jjCheckNAdd(205);
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(390, 209);
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(391, 392);
                  break;
               case 392:
                  if (curChar == 46)
                     jjCheckNAdd(207);
                  break;
               case 393:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(393, 213);
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(394, 395);
                  break;
               case 395:
                  if (curChar == 46)
                     jjCheckNAdd(210);
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(794, 798);
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(397, 398);
                  break;
               case 398:
                  if (curChar == 46)
                     jjCheckNAdd(214);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 400:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(119, 120);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 60)
                        kind = 60;
                     jjCheckNAddTwoStates(117, 118);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(130, 131);
                  break;
               case 96:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 88)
                        kind = 88;
                     jjCheckNAddTwoStates(98, 99);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(100, 110);
                  break;
               case 158:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 60)
                        kind = 60;
                     jjCheckNAddTwoStates(117, 118);
                  }
                  break;
               case 401:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 88)
                        kind = 88;
                     jjCheckNAddTwoStates(98, 99);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(100, 101);
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 60)
                        kind = 60;
                     jjCheckNAddStates(799, 803);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(804, 807);
                  else if (curChar == 64)
                     jjAddStates(808, 811);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(812, 814);
                  break;
               case 2:
                  if (kind > 5)
                     kind = 5;
                  break;
               case 5:
                  if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(122, 124);
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(122, 124);
                  break;
               case 10:
                  if (curChar == 125 && kind > 31)
                     kind = 31;
                  break;
               case 11:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 12:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(122, 124);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(125, 129);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(130, 137);
                  break;
               case 16:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(138, 141);
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(142, 146);
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(147, 152);
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(153, 159);
                  break;
               case 21:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(12, 22);
                  break;
               case 22:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(160, 164);
                  break;
               case 23:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(165, 172);
                  break;
               case 24:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(173, 176);
                  break;
               case 25:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(177, 181);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(182, 187);
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(188, 194);
                  break;
               case 30:
               case 35:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(114, 117);
                  break;
               case 32:
                  if (curChar == 92)
                     jjAddStates(815, 818);
                  break;
               case 34:
                  if (curChar == 92)
                     jjAddStates(819, 820);
                  break;
               case 36:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(195, 200);
                  break;
               case 38:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(201, 209);
                  break;
               case 39:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(210, 214);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(215, 220);
                  break;
               case 41:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(221, 227);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(228, 235);
                  break;
               case 47:
               case 52:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(110, 113);
                  break;
               case 49:
                  if (curChar == 92)
                     jjAddStates(821, 824);
                  break;
               case 51:
                  if (curChar == 92)
                     jjAddStates(825, 826);
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(236, 241);
                  break;
               case 55:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(242, 250);
                  break;
               case 56:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(251, 255);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(256, 261);
                  break;
               case 58:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(262, 268);
                  break;
               case 59:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(269, 276);
                  break;
               case 65:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(66, 67);
                  break;
               case 66:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(66, 67);
                  break;
               case 67:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 68:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(66, 67);
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(277, 280);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(281, 287);
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(288, 290);
                  break;
               case 73:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(291, 294);
                  break;
               case 74:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(295, 299);
                  break;
               case 75:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(300, 305);
                  break;
               case 77:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(68, 78);
                  break;
               case 78:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(306, 309);
                  break;
               case 79:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(310, 316);
                  break;
               case 80:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(317, 319);
                  break;
               case 81:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(320, 323);
                  break;
               case 82:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(324, 328);
                  break;
               case 83:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddStates(329, 334);
                  break;
               case 85:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(85, 86);
                  break;
               case 86:
                  if (curChar == 92)
                     jjAddStates(827, 828);
                  break;
               case 87:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(85, 86);
                  break;
               case 88:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(335, 338);
                  break;
               case 90:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(339, 345);
                  break;
               case 91:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(346, 348);
                  break;
               case 92:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(349, 352);
                  break;
               case 93:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(353, 357);
                  break;
               case 94:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(358, 363);
                  break;
               case 95:
                  if (curChar == 64)
                     jjAddStates(808, 811);
                  break;
               case 97:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 98:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 99:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(100, 101);
                  break;
               case 100:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 101:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(364, 367);
                  break;
               case 103:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(368, 374);
                  break;
               case 104:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(375, 377);
                  break;
               case 105:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(378, 381);
                  break;
               case 106:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(382, 386);
                  break;
               case 107:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(387, 392);
                  break;
               case 109:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(100, 110);
                  break;
               case 110:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(393, 396);
                  break;
               case 111:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(397, 403);
                  break;
               case 112:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(404, 406);
                  break;
               case 113:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(407, 410);
                  break;
               case 114:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(411, 415);
                  break;
               case 115:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddStates(416, 421);
                  break;
               case 117:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddTwoStates(117, 118);
                  break;
               case 118:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(119, 120);
                  break;
               case 119:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddTwoStates(117, 118);
                  break;
               case 120:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(422, 425);
                  break;
               case 122:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(426, 432);
                  break;
               case 123:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(433, 435);
                  break;
               case 124:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(436, 439);
                  break;
               case 125:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(440, 444);
                  break;
               case 126:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(445, 450);
                  break;
               case 127:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 129:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(130, 131);
                  break;
               case 130:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 131:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(451, 455);
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(456, 463);
                  break;
               case 134:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(464, 467);
                  break;
               case 135:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(468, 472);
                  break;
               case 136:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(473, 478);
                  break;
               case 137:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(479, 485);
                  break;
               case 140:
                  if ((0x10000000100000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 141:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 148:
                  if ((0x10000000100000L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 149:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 159:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 160:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(799, 803);
                  break;
               case 166:
                  if ((0x10000000100000L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 167:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 169:
                  if ((0x200000002000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 170:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 172:
                  if ((0x200000002000L & l) != 0L && kind > 68)
                     kind = 68;
                  break;
               case 173:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 175:
                  if ((0x800000008L & l) != 0L && kind > 69)
                     kind = 69;
                  break;
               case 176:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 178:
                  if ((0x400000004000L & l) != 0L && kind > 70)
                     kind = 70;
                  break;
               case 179:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 181:
                  if ((0x100000001000000L & l) != 0L && kind > 71)
                     kind = 71;
                  break;
               case 182:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 184:
                  if ((0x200000002000L & l) != 0L && kind > 72)
                     kind = 72;
                  break;
               case 185:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 187:
                  if ((0x100000001000000L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 188:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 190:
                  if ((0x8000000080L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 191:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 194:
                  if ((0x1000000010L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 195:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 198:
                  if ((0x1000000010L & l) != 0L && kind > 76)
                     kind = 76;
                  break;
               case 199:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 203:
                  if ((0x8000000080000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 204:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 206:
                  if ((0x8000000080000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 208:
                  if ((0x400000004000000L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 209:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 211:
                  if ((0x400000004000000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 212:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 216:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 217:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 218:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(219, 220);
                  break;
               case 219:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 220:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(486, 489);
                  break;
               case 222:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(490, 496);
                  break;
               case 223:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(497, 499);
                  break;
               case 224:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(500, 503);
                  break;
               case 225:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(504, 508);
                  break;
               case 226:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(509, 514);
                  break;
               case 228:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(219, 229);
                  break;
               case 229:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(515, 518);
                  break;
               case 230:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(519, 525);
                  break;
               case 231:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(526, 528);
                  break;
               case 232:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(529, 532);
                  break;
               case 233:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(533, 537);
                  break;
               case 234:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(538, 543);
                  break;
               case 235:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(812, 814);
                  break;
               case 237:
               case 241:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(550, 553);
                  break;
               case 240:
                  if (curChar == 92)
                     jjAddStates(829, 830);
                  break;
               case 242:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(554, 558);
                  break;
               case 244:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(559, 566);
                  break;
               case 245:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(567, 570);
                  break;
               case 246:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(571, 575);
                  break;
               case 247:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(576, 581);
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(582, 588);
                  break;
               case 250:
               case 255:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(589, 592);
                  break;
               case 252:
                  if (curChar == 92)
                     jjAddStates(831, 834);
                  break;
               case 254:
                  if (curChar == 92)
                     jjAddStates(835, 836);
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(593, 598);
                  break;
               case 258:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(599, 607);
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(608, 612);
                  break;
               case 260:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(613, 618);
                  break;
               case 261:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(619, 625);
                  break;
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(626, 633);
                  break;
               case 267:
               case 272:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(634, 637);
                  break;
               case 269:
                  if (curChar == 92)
                     jjAddStates(837, 840);
                  break;
               case 271:
                  if (curChar == 92)
                     jjAddStates(841, 842);
                  break;
               case 273:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(638, 643);
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(644, 652);
                  break;
               case 276:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(653, 657);
                  break;
               case 277:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(658, 663);
                  break;
               case 278:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(664, 670);
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(671, 678);
                  break;
               case 284:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 285:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 293:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjAddStates(695, 700);
                  break;
               case 294:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 295:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(297);
                  break;
               case 297:
                  if ((0x7e0000007eL & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 298:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 299:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 300:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 301:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 302:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 304:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 306:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 307:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 319:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(320, 326);
                  break;
               case 321:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 322:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(711, 714);
                  break;
               case 323:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(297);
                  break;
               case 324:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(297, 323);
                  break;
               case 325:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(715, 717);
                  break;
               case 326:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(718, 722);
                  break;
               case 327:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(320);
                  break;
               case 328:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(327, 320);
                  break;
               case 329:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(723, 725);
                  break;
               case 330:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(726, 729);
                  break;
               case 331:
                  if (curChar == 92)
                     jjCheckNAddStates(804, 807);
                  break;
               case 332:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(730, 733);
                  break;
               case 333:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(734, 740);
                  break;
               case 334:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(741, 743);
                  break;
               case 335:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(744, 747);
                  break;
               case 336:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(748, 752);
                  break;
               case 337:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddStates(753, 758);
                  break;
               case 338:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(759, 763);
                  break;
               case 339:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(764, 771);
                  break;
               case 340:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(772, 775);
                  break;
               case 341:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(776, 780);
                  break;
               case 342:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(781, 786);
                  break;
               case 343:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(787, 793);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 400:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 60)
                        kind = 60;
                     jjCheckNAddTwoStates(117, 118);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 96:
               case 100:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 401:
               case 98:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAddTwoStates(98, 99);
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAddStates(799, 803);
                  break;
               case 2:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 9:
               case 12:
               case 20:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(122, 124);
                  break;
               case 30:
               case 35:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(114, 117);
                  break;
               case 47:
               case 52:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(110, 113);
                  break;
               case 66:
               case 68:
               case 76:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(66, 67);
                  break;
               case 85:
               case 87:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(85, 86);
                  break;
               case 117:
               case 119:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAddTwoStates(117, 118);
                  break;
               case 127:
               case 130:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 217:
               case 219:
               case 227:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(217, 218);
                  break;
               case 237:
               case 241:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(550, 553);
                  break;
               case 250:
               case 255:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(589, 592);
                  break;
               case 267:
               case 272:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(634, 637);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 399 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_3(0x100L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_3(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(1, 8);
         break;
      default :
         return 2;
   }
   return 2;
}
private int jjMoveStringLiteralDfa0_1()
{
   return jjMoveNfa_1(0, 0);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if ((0x2400L & l) != 0L && kind > 4)
                     kind = 4;
                  break;
               case 2:
                  if (curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 3:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 3)
                     kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_2(0x80L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   127, 128, 129, 214, 215, 216, 227, 228, 345, 346, 347, 348, 349, 350, 164, 351, 
   352, 353, 167, 354, 355, 356, 170, 357, 358, 359, 173, 360, 361, 362, 176, 363, 
   364, 365, 179, 366, 367, 368, 182, 369, 370, 371, 185, 372, 373, 374, 188, 375, 
   376, 377, 192, 378, 379, 380, 196, 381, 382, 383, 201, 384, 385, 386, 204, 387, 
   388, 389, 206, 390, 391, 392, 209, 393, 394, 395, 213, 396, 397, 398, 215, 216, 
   227, 228, 162, 163, 165, 168, 171, 174, 177, 180, 183, 186, 189, 193, 197, 202, 
   205, 207, 210, 214, 158, 159, 139, 146, 147, 156, 64, 65, 76, 77, 47, 48, 
   49, 51, 30, 31, 32, 34, 7, 8, 20, 21, 9, 10, 11, 9, 14, 10, 
   11, 15, 9, 16, 14, 10, 11, 17, 18, 19, 9, 14, 10, 11, 9, 16, 
   14, 10, 11, 9, 16, 14, 10, 11, 17, 9, 16, 14, 10, 11, 17, 18, 
   14, 9, 10, 11, 23, 24, 14, 9, 10, 11, 25, 26, 27, 14, 9, 10, 
   11, 24, 14, 9, 10, 11, 24, 14, 9, 10, 11, 25, 24, 14, 9, 10, 
   11, 25, 26, 30, 37, 31, 32, 34, 38, 30, 39, 37, 31, 32, 34, 40, 
   41, 42, 30, 37, 31, 32, 34, 30, 39, 37, 31, 32, 34, 30, 39, 37, 
   31, 32, 34, 40, 30, 39, 37, 31, 32, 34, 40, 41, 47, 54, 48, 49, 
   51, 55, 47, 56, 54, 48, 49, 51, 57, 58, 59, 47, 54, 48, 49, 51, 
   47, 56, 54, 48, 49, 51, 47, 56, 54, 48, 49, 51, 57, 47, 56, 54, 
   48, 49, 51, 57, 58, 66, 70, 67, 71, 66, 72, 70, 67, 73, 74, 75, 
   66, 70, 67, 66, 72, 70, 67, 66, 72, 70, 67, 73, 66, 72, 70, 67, 
   73, 74, 70, 66, 67, 79, 80, 70, 66, 67, 81, 82, 83, 70, 66, 67, 
   80, 70, 66, 67, 80, 70, 66, 67, 81, 80, 70, 66, 67, 81, 82, 85, 
   89, 86, 90, 85, 91, 89, 86, 92, 93, 94, 85, 89, 86, 85, 91, 89, 
   86, 85, 91, 89, 86, 92, 85, 91, 89, 86, 92, 93, 98, 102, 99, 103, 
   98, 104, 102, 99, 105, 106, 107, 98, 102, 99, 98, 104, 102, 99, 98, 104, 
   102, 99, 105, 98, 104, 102, 99, 105, 106, 102, 98, 99, 111, 112, 102, 98, 
   99, 113, 114, 115, 102, 98, 99, 112, 102, 98, 99, 112, 102, 98, 99, 113, 
   112, 102, 98, 99, 113, 114, 117, 121, 118, 122, 117, 123, 121, 118, 124, 125, 
   126, 117, 121, 118, 117, 123, 121, 118, 117, 123, 121, 118, 124, 117, 123, 121, 
   118, 124, 125, 127, 132, 128, 129, 133, 127, 134, 132, 128, 129, 135, 136, 137, 
   127, 132, 128, 129, 127, 134, 132, 128, 129, 127, 134, 132, 128, 129, 135, 127, 
   134, 132, 128, 129, 135, 136, 217, 221, 218, 222, 217, 223, 221, 218, 224, 225, 
   226, 217, 221, 218, 217, 223, 221, 218, 217, 223, 221, 218, 224, 217, 223, 221, 
   218, 224, 225, 221, 217, 218, 230, 231, 221, 217, 218, 232, 233, 234, 221, 217, 
   218, 231, 221, 217, 218, 231, 221, 217, 218, 232, 231, 221, 217, 218, 232, 233, 
   237, 249, 266, 239, 240, 283, 237, 238, 239, 240, 237, 239, 240, 243, 244, 237, 
   245, 239, 240, 243, 246, 247, 248, 237, 239, 240, 243, 237, 245, 239, 240, 243, 
   237, 245, 239, 240, 243, 246, 237, 245, 239, 240, 243, 246, 247, 250, 251, 252, 
   254, 250, 257, 251, 252, 254, 258, 250, 259, 257, 251, 252, 254, 260, 261, 262, 
   250, 257, 251, 252, 254, 250, 259, 257, 251, 252, 254, 250, 259, 257, 251, 252, 
   254, 260, 250, 259, 257, 251, 252, 254, 260, 261, 267, 268, 269, 271, 267, 274, 
   268, 269, 271, 275, 267, 276, 274, 268, 269, 271, 277, 278, 279, 267, 274, 268, 
   269, 271, 267, 276, 274, 268, 269, 271, 267, 276, 274, 268, 269, 271, 277, 267, 
   276, 274, 268, 269, 271, 277, 278, 237, 249, 266, 238, 239, 240, 283, 287, 293, 
   289, 290, 291, 292, 289, 290, 291, 294, 298, 302, 306, 310, 314, 289, 312, 313, 
   289, 315, 316, 317, 289, 315, 316, 297, 323, 324, 325, 297, 323, 324, 327, 320, 
   328, 329, 330, 327, 320, 328, 327, 320, 328, 329, 121, 117, 118, 333, 334, 121, 
   117, 118, 335, 336, 337, 121, 117, 118, 334, 121, 117, 118, 334, 121, 117, 118, 
   335, 334, 121, 117, 118, 335, 336, 132, 127, 128, 129, 339, 340, 132, 127, 128, 
   129, 341, 342, 343, 132, 127, 128, 129, 340, 132, 127, 128, 129, 340, 132, 127, 
   128, 129, 341, 340, 132, 127, 128, 129, 341, 342, 396, 215, 216, 227, 228, 117, 
   127, 128, 129, 118, 119, 332, 130, 338, 96, 97, 108, 109, 285, 286, 318, 33, 
   43, 45, 44, 35, 36, 50, 60, 62, 61, 52, 53, 87, 88, 241, 242, 253, 
   263, 265, 264, 255, 256, 270, 280, 282, 281, 272, 273, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, "\74\41\55\55", 
"\55\55\76", "\173", "\175", "\174\75", "\176\75", "\75", "\53", "\55", "\54", "\73", 
"\76", "\57", "\133", "\135", "\52", "\46", "\56", "\50", "\51", "\72", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_SINGLE_LINE_COMMENT",
   "IN_FORMAL_COMMENT",
   "IN_MULTI_LINE_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, -1, 0, 2, 3, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, 
};
static final long[] jjtoToken = {
   0xbffffe01fffffc03L, 0x3803ffffffL, 
};
static final long[] jjtoSkip = {
   0x190L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x80L, 0x0L, 
};
static final long[] jjtoMore = {
   0x26cL, 0x0L, 
};
protected CharStream input_stream;
private final int[] jjrounds = new int[399];
private final int[] jjstateSet = new int[798];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public ParserTokenManager(CharStream stream){
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(CharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(CharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 399; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(CharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 101)
         {
            jjmatchedKind = 101;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos == 0 && jjmatchedKind > 9)
         {
            jjmatchedKind = 9;
         }
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 9)
         {
            jjmatchedKind = 9;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 5 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                   input_stream.backup(1);
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
          image = Parser.SPACE;
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
