<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.vaadin</groupId>
		<artifactId>vaadin-root</artifactId>
		<version>7.7.0-SNAPSHOT</version>
	</parent>
	<groupId>com.vaadin</groupId>
	<artifactId>vaadin-client</artifactId>
	<name>vaadin-client</name>
	<packaging>jar</packaging>

	<organization>
		<name>Vaadin Ltd</name>
	</organization>
	<url>https://vaadin.com/</url>
	<description>Vaadin client</description>

	<dependencies>
		<!-- LIBRARY DEPENDENCIES (compile time) -->
		<!-- Project modules -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-shared</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-sass-compiler</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- gwt-user dependencies -->
		<dependency>
			<groupId>org.w3c.css</groupId>
			<artifactId>sac</artifactId>
			<version>1.3</version>
		</dependency>

		<!-- Bean Validation API -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax.validation.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax.validation.version}</version>
			<classifier>sources</classifier>
		</dependency>

		<!-- Testing dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Needed GWT dependencies. Required parts are packaged to jar -->
		<dependency>
			<groupId>com.vaadin.external.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${vaadin.gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin.external.gwt</groupId>
			<artifactId>gwt-elemental</artifactId>
			<version>${vaadin.gwt.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- Copy needed GWT dependencies to package -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.vaadin.external.gwt</groupId>
									<artifactId>gwt-user</artifactId>
									<excludes>
										META-INF/**,
										**/*.gwtar,
										com/google/gwt/*/server/**,
										com/google/gwt/*/shared/**,
										com/google/gwt/*/*/shared/**,
										com/google/web/bindery/*/shared/**,
										com/google/gwt/user/client/rpc/IsSerializable.*,
										com/google/gwt/thirdparty/streamhtmlparser/**,
										org/w3c/**,
										javax/servlet/**
									</excludes>
								</artifactItem>
								<artifactItem>
									<groupId>com.vaadin.external.gwt</groupId>
									<artifactId>gwt-elemental</artifactId>
									<excludes>META-INF/**</excludes>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<!-- Copy .java files to package -->
					<execution>
						<id>copy-sources</id>
						<!-- here the phase you need -->
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>false</filtering>
								</resource>
								<resource>
									<directory>src/main/java</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
						<Export-Package>com.vaadin.*;version="${project.version}",com.google.*;version="${project.version}"</Export-Package>
						<Import-Package></Import-Package>
					</instructions>
				</configuration>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						<index>false</index>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Vaadin-Package-Version>1</Vaadin-Package-Version>
							<Vaadin-Widgetsets>com.vaadin.DefaultWidgetSet</Vaadin-Widgetsets>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
